numcols
length(nitrates)
sulfates <- data$nitrate[complete]
sulfates
length(sulfates)
length(complete)
117*117
complete_counts <- data.frame(id, nobs)
complete_counts <- data.frame(id = as.numeric(), nobs = as.numeric())
complete_counts
complete_counts <- rbind(1, 12)
complete_counts
complete_counts <- cbind(1, 12)
complete_counts
complete_counts <- data.frame(id = as.numeric(), nobs = as.numeric())
complete_counts <- cbind(1, 12)
complete_counts
complete_counts <- data.frame(id = as.numeric(), nobs = as.numeric())
complete_counts
complete_counts <- rbind(complete_counts, 1:2)
complete_counts
length(filenames)
n <- length(filenames)
n
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
complete_counts
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(filenames)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
n
selected_file <- filenames[1]
selected_file
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_rows
thisis <- 1
complete_counts$id[thisis] <- thisis
complete_counts$id[nobs] <- complete_rows
complete_counts$nobs[thisis] <- complete_rows
complete_counts[1,]
filenames
id <- 12:14
id
for (i in 1:length(id)) {
selected_file <- filenames[id[i]]
}
selected_file
complete_counts$nobs[thisis] <- complete_rows
complete <- function(directory, id = 1:332) {
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(filenames)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[nextid] <- nextid
complete_counts$nobs[nextid] <- complete_rows
}
}
}
{}
complete <- function(directory, id = 1:332) {
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(filenames)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[nextid] <- nextid
complete_counts$nobs[nextid] <- complete_rows
}
}
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(filenames)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(filenames)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
complete_counts
for (i in 1:length(id) {
{}
complete <- function(directory, id = 1:332) {
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(filenames)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[nextid] <- nextid
complete_counts$nobs[nextid] <- complete_rows
}
}
complete_data <- complete("specdata", 1)
complete_data
complete_data <- complete("specdata", c(2, 4, 8, 10, 12))
complete_data
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(filenames)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id)) {
nextid <- id[i]
}
nextid
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
}
selected_file
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_rows
complete_set
data
}
copmlete_rows
complete_rows
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[nextid] <- nextid
}
complete_counts
id
n <- length(id)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
complete_counts
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[nextid] <- nextid
complete_counts$nobs[nextid] <- complete_rows
}
complete_counts$id
complete_counts$nobs
complete_counts
complete_counts$id[1]
complete_counts$id[1] <- 1
complete_counts$id[1]
complete_counts
nextid
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[i] <- nextid
complete_counts$nobs[i] <- complete_rows
}
complete_counts
complete <- function(directory, id = 1:332) {
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(id)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[i] <- nextid
complete_counts$nobs[i] <- complete_rows
}
}
complete("specdata", 1)
copmlete
cd <- complete("specdata", 1)
cd
cd <- complete("specdata", 1:3)
cd
complete_counts
complete_counts
complete("specdata", 1)
cd <- complete("specdata", 1)
cd
directory
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(id)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[i] <- nextid
complete_counts$nobs[i] <- complete_rows
}
complete_counts
source("complete.R")
cd <- complete("specdata", 1)
cd
directory
id
id <- 1
id
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(id)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[i] <- nextid
complete_counts$nobs[i] <- complete_rows
}
complete_counts
id <- c(2, 4, 8, 10, 12)
id
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(id)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[i] <- nextid
complete_counts$nobs[i] <- complete_rows
}
complete_counts
id <- 30:25
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(id)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[i] <- nextid
complete_counts$nobs[i] <- complete_rows
}
complete_counts
id <- 3
filenames <- list.files(directory, pattern = "*.csv", full.names = TRUE)
n <- length(id)
complete_counts <- data.frame(id = numeric(n), nobs = numeric(n))
for (i in 1:length(id)) {
nextid <- id[i]
selected_file <- filenames[nextid]
data <- read.csv(selected_file)
complete_set <- complete.cases(data$sulfate, data$nitrate)
complete_rows <- length(data$sulfate[complete_set])
complete_counts$id[i] <- nextid
complete_counts$nobs[i] <- complete_rows
}
complete_counts
?cor
correlation <- numeric()
data
data$sulfate
data$nitrate
correlation = c(correlation, cor(data$sulfate, data$nitrate, use = "complete.obs"))
correlation
cors = vector()
cors = c(cors, cor(data$sulfate, data$nitrate, use = "complete.obs"))
cors
x <- 1:10
if(x >5){}
if ( x> 5) {
x <- 0
}
x
getwd()
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function() {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(inverse) i <<- inverse
getinverse <- function() i
list(set = set, get = get, setinverse = setinverse, getinverse = getinverse)
}
## calculates the inverse matrix if not cached, or retrieves the
## cached inverse if available
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
i <- x$getinverse()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinverse(i)
i
}
ls(makeCacheMatrix())
ls(makeCacheMatrix
ls(makeCacheMatrix)
makeCacheMatrix
cacheSolve
matrix(c(1,3), c(5,4))
matrix(c(1,3,5,4), c(2,2))
mahdata = matrix(c(1,3,5,4), c(2,2))
mahdata
cacheSolve(mahdata)
makeCacheMatrix(mahdata)
matrix1 <- makeCacheMatrix(mahdata)
cacheSolve(matrix1)
setwd("/home/cknutson/coursera/exploratoryda/ExData_Plotting1")
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$Date <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$Date >= date1 & data$Date <= date2]
png(file = "plot1.png")
hist(filtered_data$Global_active_power, main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "red")
dev.off()
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$Date <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$Date >= date1 & data$Date <= date2,]
nrow(filtered_data)
png(file = "plot1.png")
hist(filtered_data$Global_active_power, main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "red")
dev.off()
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$DateTime <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$DateTime >= date1 & data$DateTime <= date2,]
filtered_data$DateTime <- strptime(paste(filtered_data$DateTime, filtered_data$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S")
plot(weekdays(filtered_data$DateTime), filtered_data$Global_active_power,
ylab = "Global Active Power (kilowatts)")
lines(filtered_data$DateTime, filtered_data$Global_active_power)
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$DateTime <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$DateTime >= date1 & data$DateTime <= date2,]
filtered_data$DateTime <- strptime(paste(filtered_data$DateTime, filtered_data$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S")
plot(filtered_data$DateTime, filtered_data$Global_active_power,
ylab = "Global Active Power (kilowatts)")
lines(filtered_data$DateTime, filtered_data$Global_active_power)
plot(filtered_data$DateTime, filtered_data$Global_active_power,
ylab = "Global Active Power (kilowatts)", type = "n")
lines(filtered_data$DateTime, filtered_data$Global_active_power)
plot(filtered_data$DateTime, filtered_data$Global_active_power,
xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
lines(filtered_data$DateTime, filtered_data$Global_active_power)
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$DateTime <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$DateTime >= date1 & data$DateTime <= date2,]
filtered_data$DateTime <- strptime(paste(filtered_data$DateTime, filtered_data$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S")
png(file = "plot2.png")
plot(filtered_data$DateTime, filtered_data$Global_active_power,
xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
lines(filtered_data$DateTime, filtered_data$Global_active_power)
dev.off()
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$Date <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$Date >= date1 & data$Date <= date2,]
png(file = "plot1.png", height = 480, width = 480)
hist(filtered_data$Global_active_power, main = "Global Active Power",
xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "red")
dev.off()
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$DateTime <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$DateTime >= date1 & data$DateTime <= date2,]
filtered_data$DateTime <- strptime(paste(filtered_data$DateTime, filtered_data$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S")
png(file = "plot2.png", height = 480, width = 480)
plot(filtered_data$DateTime, filtered_data$Global_active_power,
xlab = "", ylab = "Global Active Power (kilowatts)", type = "n")
lines(filtered_data$DateTime, filtered_data$Global_active_power)
dev.off()
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$DateTime <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$DateTime >= date1 & data$DateTime <= date2,]
filtered_data$DateTime <- strptime(paste(filtered_data$DateTime, filtered_data$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S")
plot(filtered_data$DateTime, filtered_data$Sub_metering_1,
xlab = "", ylab = "Energy sub metering", type = "n")
lines(filtered_data$DateTime, filtered_data$Sub_metering_1, col = "black")
lines(filtered_data$DateTime, filtered_data$Sub_metering_2, col = "red")
lines(filtered_data$DateTime, filtered_data$Sub_metering_3, col = "blue")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"))
legend("topright", pch = 21, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"))
legend("topright", pch = 21, col = c("black", "red", "blue"), lty = c(1, 1, 1)
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", col = c("black", "red", "blue"), lty = c(1, 1, 1)
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", col = c("black", "red", "blue"), lty = c(1, 1, 1)
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", col = c("black", "red", "blue"), lty = c(1, 1, 1),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$DateTime <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$DateTime >= date1 & data$DateTime <= date2,]
filtered_data$DateTime <- strptime(paste(filtered_data$DateTime, filtered_data$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S")
png(file = "plot3.png", height = 480, width = 480)
plot(filtered_data$DateTime, filtered_data$Sub_metering_1,
xlab = "", ylab = "Energy sub metering", type = "n")
lines(filtered_data$DateTime, filtered_data$Sub_metering_1, col = "black")
lines(filtered_data$DateTime, filtered_data$Sub_metering_2, col = "red")
lines(filtered_data$DateTime, filtered_data$Sub_metering_3, col = "blue")
legend("topright", col = c("black", "red", "blue"), lty = c(1, 1, 1),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$DateTime <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$DateTime >= date1 & data$DateTime <= date2,]
filtered_data$DateTime <- strptime(paste(filtered_data$DateTime, filtered_data$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S")
par(mfrow = c(2, 2))
with(filtered_data, {
plot(filtered_data$DateTime, filtered_data$Global_active_power,
xlab = "", ylab = "Global Active Power", type = "n")
lines(filtered_data$DateTime, filtered_data$Global_active_power)
plot(filtered_data$DateTime, filtered_data$Voltage,
xlab = "datetime", ylab = "Voltage", type = "n")
lines(filtered_data$DateTime, filtered_data$Voltage)
plot(filtered_data$DateTime, filtered_data$Sub_metering_1,
xlab = "", ylab = "Energy sub metering", type = "n")
lines(filtered_data$DateTime, filtered_data$Sub_metering_1, col = "black")
lines(filtered_data$DateTime, filtered_data$Sub_metering_2, col = "red")
lines(filtered_data$DateTime, filtered_data$Sub_metering_3, col = "blue")
legend("topright", col = c("black", "red", "blue"), lty = c(1, 1, 1),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(filtered_data$Global_reactive_power, filtered_data$Voltage,
xlab = "datetime", type = "n")
lines(filtered_data$DateTime, filtered_data$Global_reactive_power)
})
data_file <- file.path("..", "hww1", "household_power_consumption.txt")
data <- read.csv(data_file, sep = ";", na.strings = "?")
data$DateTime <- as.Date(data$Date, "%d/%m/%Y")
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
filtered_data <- data[data$DateTime >= date1 & data$DateTime <= date2,]
filtered_data$DateTime <- strptime(paste(filtered_data$DateTime, filtered_data$Time, sep = " "),
format = "%Y-%m-%d %H:%M:%S")
png(file = "plot4.png", height = 480, width = 480)
par(mfrow = c(2, 2))
with(filtered_data, {
plot(filtered_data$DateTime, filtered_data$Global_active_power,
xlab = "", ylab = "Global Active Power", type = "n")
lines(filtered_data$DateTime, filtered_data$Global_active_power)
plot(filtered_data$DateTime, filtered_data$Voltage,
xlab = "datetime", ylab = "Voltage", type = "n")
lines(filtered_data$DateTime, filtered_data$Voltage)
plot(filtered_data$DateTime, filtered_data$Sub_metering_1,
xlab = "", ylab = "Energy sub metering", type = "n")
lines(filtered_data$DateTime, filtered_data$Sub_metering_1, col = "black")
lines(filtered_data$DateTime, filtered_data$Sub_metering_2, col = "red")
lines(filtered_data$DateTime, filtered_data$Sub_metering_3, col = "blue")
legend("topright", col = c("black", "red", "blue"), lty = c(1, 1, 1),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(filtered_data$DateTime, filtered_data$Global_reactive_power,
xlab = "datetime", ylab = "Global_reactive_power", type = "n")
lines(filtered_data$DateTime, filtered_data$Global_reactive_power)
})
dev.off()
